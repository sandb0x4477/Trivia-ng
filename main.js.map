{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search-form/search-form.component.css","webpack:///./src/app/search-form/search-form.component.html","webpack:///./src/app/search-form/search-form.component.ts","webpack:///./src/app/shared/opentdb.service.ts","webpack:///./src/app/shared/query.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"uk-container\\\">\\n  <div class=\\\"uk-margin-top\\\">\\n    <app-search-form></app-search-form>\\n  </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Trivia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { OpentdbService } from './shared/opentdb.service';\nimport { SearchFormComponent } from './search-form/search-form.component';\n\n@NgModule({\n  declarations: [AppComponent,  SearchFormComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule],\n  providers: [OpentdbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1mb3JtL3NlYXJjaC1mb3JtLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<form #queryForm=\\\"ngForm\\\">\\n  <fieldset class=\\\"uk-fieldset\\\">\\n\\n    <legend class=\\\"uk-legend uk-text-primary uk-text-center\\\">Choose parameters</legend>\\n\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-select\\\">Number of questions: {{query.numberOfQuests}}</label>\\n      <input class=\\\"uk-range\\\" type=\\\"range\\\" value=\\\"3\\\" min=\\\"1\\\" max=\\\"20\\\" step=\\\"1\\\" [(ngModel)]=\\\"query.numberOfQuests\\\" name=\\\"numberOfQuests\\\"\\n        #numberOfQuests=\\\"ngModel\\\">\\n    </div>\\n\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-select\\\">Choose category</label>\\n      <select class=\\\"uk-select\\\" [(ngModel)]=\\\"query.category\\\" name=\\\"category\\\" #category=\\\"ngModel\\\">\\n        <option value=\\\"any\\\">Any Category</option>\\n        <option value=\\\"9\\\">General Knowledge</option>\\n        <option value=\\\"10\\\">Entertainment: Books</option>\\n        <option value=\\\"11\\\">Entertainment: Film</option>\\n        <option value=\\\"12\\\">Entertainment: Music</option>\\n        <option value=\\\"13\\\">Entertainment: Musicals &amp; Theatres</option>\\n        <option value=\\\"14\\\">Entertainment: Television</option>\\n        <option value=\\\"15\\\">Entertainment: Video Games</option>\\n        <option value=\\\"16\\\">Entertainment: Board Games</option>\\n        <option value=\\\"17\\\">Science &amp; Nature</option>\\n        <option value=\\\"18\\\">Science: Computers</option>\\n        <option value=\\\"19\\\">Science: Mathematics</option>\\n        <option value=\\\"20\\\">Mythology</option>\\n        <option value=\\\"21\\\">Sports</option>\\n        <option value=\\\"22\\\">Geography</option>\\n        <option value=\\\"23\\\">History</option>\\n        <option value=\\\"24\\\">Politics</option>\\n        <option value=\\\"25\\\">Art</option>\\n        <option value=\\\"26\\\">Celebrities</option>\\n        <option value=\\\"27\\\">Animals</option>\\n        <option value=\\\"28\\\">Vehicles</option>\\n        <option value=\\\"29\\\">Entertainment: Comics</option>\\n        <option value=\\\"30\\\">Science: Gadgets</option>\\n        <option value=\\\"31\\\">Entertainment: Japanese Anime &amp; Manga</option>\\n        <option value=\\\"32\\\">Entertainment: Cartoon &amp; Animations</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-select\\\">Select difficulty</label>\\n      <div class=\\\"uk-form-controls\\\">\\n        <select class=\\\"uk-select\\\" id=\\\"form-stacked-select\\\" [(ngModel)]=\\\"query.difficulty\\\" name=\\\"difficulty\\\" #difficulty=\\\"ngModel\\\">\\n          <option value=\\\"any\\\">Any Difficulty</option>\\n          <option value=\\\"easy\\\">Easy</option>\\n          <option value=\\\"medium\\\">Medium</option>\\n          <option value=\\\"hard\\\">Hard</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"uk-margin\\\">\\n      <label class=\\\"uk-form-label\\\" for=\\\"form-stacked-select\\\">Select type</label>\\n      <div class=\\\"uk-form-controls\\\">\\n        <select class=\\\"uk-select\\\" id=\\\"form-stacked-select\\\" [(ngModel)]=\\\"query.type\\\" name=\\\"type\\\" #type=\\\"ngModel\\\">\\n          <option value=\\\"any\\\">Any Type</option>\\n          <option value=\\\"multiple\\\">Multiple Choice</option>\\n          <option value=\\\"boolean\\\">True / False</option>\\n        </select>\\n      </div>\\n    </div>\\n    <button class=\\\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\\\" (click)=\\\"fetchQuestions(queryForm)\\\">Start!</button>\\n\\n  </fieldset>\\n</form>\\n<hr class=\\\"uk-divider-icon\\\">\\n\\n\\n<div *ngFor=\\\"let question of questions; let i = index\\\">\\n\\n  <h4 class=\\\"uk-text-center\\\">\\n    {{ question.question }}\\n  </h4>\\n\\n  <div class=\\\"uk-child-width-1-1@s uk-child-width-1-2@m uk-grid-small\\\" uk-grid>\\n    <div *ngFor=\\\"let pick of question.pick_one; let j = index\\\" >\\n      <div>\\n\\n        <p>\\n          <button #button class=\\\"uk-button uk-button-default uk-width-1-1\\\"\\n          [attr.id]=\\\"setId(i, j)\\\"\\n          value=\\\"{{ pick }}\\\"\\n          name=\\\"{{ pick }}\\\"\\n          (click)=\\\"checkAnswer($event, question.correct_answer)\\\">\\n          {{ pick }}\\n        </button>\\n        </p>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n    <hr class=\\\"uk-divider-icon\\\">\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Query } from '../shared/query.model';\nimport { OpentdbService } from '../shared/opentdb.service';\nimport { NgForm } from '@angular/forms';\nimport { Question } from '../shared/question.model';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent implements OnInit {\n  query: Query = new Query();\n  questions: Question[];\n\n  constructor(private opentdbService: OpentdbService) {\n    this.query.numberOfQuests = '5';\n    this.query.category = 'any';\n    this.query.difficulty = 'any';\n    this.query.type = 'any';\n  }\n\n  ngOnInit() { }\n\n\n  fetchQuestions(f: NgForm) {\n    if (f.value.category === 'any') {\n      f.value.category = '';\n    }\n    if (f.value.difficulty === 'any') {\n      f.value.difficulty = '';\n    }\n    if (f.value.type === 'any') {\n      f.value.type = '';\n    }\n    this.opentdbService.getQuestions(f.value).subscribe(q => {\n      this.questions = q['results'];\n      this.parseText(this.questions);\n      this.joinArrays(this.questions);\n    });\n  }\n\n\n  joinArrays(q: Array<Question>) {\n    const tempArr = JSON.parse(JSON.stringify(q));\n    const joined = [];\n    for (let i = 0; i < tempArr.length; i++) {\n      joined[i] = tempArr[i].incorrect_answers;\n      joined[i].push(tempArr[i].correct_answer);\n    }\n\n    for (let j = 0; j < joined.length; j++) {\n      this.questions[j].pick_one = this.shuffle(joined[j]);\n    }\n  }\n\n\n  shuffle(arr) {\n    return arr.map((a) => ({ sort: Math.random(), value: a }))\n      .sort((a, b) => a.sort - b.sort)\n      .map((a) => a.value);\n  }\n\n\n  checkAnswer($event, correctAnswer) {\n    const clickedButton = document.getElementById($event.target.id);\n    const clickedButtonValue = $event.target.value;\n\n    if (clickedButtonValue === correctAnswer) {\n      clickedButton.classList.remove('uk-button-default');\n      clickedButton.classList.add('uk-button-primary');\n    } else {\n      clickedButton.classList.remove('uk-button-default');\n      clickedButton.classList.add('uk-button-danger');\n    }\n  }\n\n\n  setId(i, j) {\n    return i.toString() + '-' + j.toString();\n  }\n\n\n  parseText(arr) {\n    for (let i = 0; i < arr.length; i++) {\n      arr[i].question = this.decodeHtml(arr[i].question);\n      arr[i].correct_answer = this.decodeHtml(arr[i].correct_answer);\n\n      for (let j = 0; j < arr[i].incorrect_answers.length; j++) {\n        arr[i].incorrect_answers[j] = this.decodeHtml(arr[i].incorrect_answers[j]);\n      }\n    }\n  }\n\n\n  decodeHtml(html) {\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Question } from './question.model';\nimport { Query } from './query.model';\nimport { map } from 'rxjs/operators';\n\n// const httpOptions = {\n//   headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n// };\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OpentdbService {\n  query: Query = new Query();\n\n  opentdbUrl = 'https://opentdb.com/api.php?amount=';\n  // private params = `${this.query.numberOfQuests}&category=\n  // ${this.query.category}&difficulty=${this.query.difficulty}&type=${\n  //   this.query.type\n  // }`;\n\n  // URL to web api https://opentdb.com/api.php?amount=10&category=10&difficulty=easy&type=multiple\n\n  constructor(private http: HttpClient) { }\n\n  getQuestions(q: Query): Observable<Question[]> {\n    const url = `${ this.opentdbUrl }${ q.numberOfQuests }&category=${\n      q.category\n      }&difficulty=${ q.difficulty }&type=${ q.type }`;\n    // console.log(url);\n\n    return this.http.get<Question[]>(url);\n  }\n}\n","export class Query {\r\n  numberOfQuests: string;\r\n  category: string;\r\n  difficulty: string;\r\n  type: string;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}